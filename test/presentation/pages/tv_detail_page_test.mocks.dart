// Mocks generated by Mockito 5.2.0 from annotations
// in ditonton/test/presentation/pages/tv_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:ditonton/common/state_enum.dart' as _i9;
import 'package:ditonton/domain/entities/tv_detail.dart' as _i7;
import 'package:ditonton/domain/entities/tv_series.dart' as _i10;
import 'package:ditonton/domain/usecases/get_tv_movie_detail.dart' as _i2;
import 'package:ditonton/domain/usecases/get_tv_movie_recommendations.dart'
    as _i3;
import 'package:ditonton/domain/usecases/get_tv_watchlist_status.dart' as _i4;
import 'package:ditonton/domain/usecases/remove_tv_watchlist.dart' as _i6;
import 'package:ditonton/domain/usecases/save_tv_watchlist.dart' as _i5;
import 'package:ditonton/presentation/provider/tv_detail_notifier.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTvMovieDetail_0 extends _i1.Fake implements _i2.GetTvMovieDetail {
}

class _FakeGetTvMovieRecommendations_1 extends _i1.Fake
    implements _i3.GetTvMovieRecommendations {}

class _FakeGetTvWatchListStatus_2 extends _i1.Fake
    implements _i4.GetTvWatchListStatus {}

class _FakeSaveTvWatchlist_3 extends _i1.Fake implements _i5.SaveTvWatchlist {}

class _FakeRemoveTvWatchlist_4 extends _i1.Fake
    implements _i6.RemoveTvWatchlist {}

class _FakeTvDetail_5 extends _i1.Fake implements _i7.TvDetail {}

/// A class which mocks [TvDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailNotifier extends _i1.Mock implements _i8.TvDetailNotifier {
  MockTvDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvMovieDetail get getTvMovieDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvMovieDetail),
          returnValue: _FakeGetTvMovieDetail_0()) as _i2.GetTvMovieDetail);
  @override
  _i3.GetTvMovieRecommendations get getTvMovieRecommendations =>
      (super.noSuchMethod(Invocation.getter(#getTvMovieRecommendations),
              returnValue: _FakeGetTvMovieRecommendations_1())
          as _i3.GetTvMovieRecommendations);
  @override
  _i4.GetTvWatchListStatus get getTvWatchListStatus => (super.noSuchMethod(
      Invocation.getter(#getTvWatchListStatus),
      returnValue: _FakeGetTvWatchListStatus_2()) as _i4.GetTvWatchListStatus);
  @override
  _i5.SaveTvWatchlist get saveWatchlistTv =>
      (super.noSuchMethod(Invocation.getter(#saveWatchlistTv),
          returnValue: _FakeSaveTvWatchlist_3()) as _i5.SaveTvWatchlist);
  @override
  _i6.RemoveTvWatchlist get removeWatchlistTv =>
      (super.noSuchMethod(Invocation.getter(#removeWatchlistTv),
          returnValue: _FakeRemoveTvWatchlist_4()) as _i6.RemoveTvWatchlist);
  @override
  _i7.TvDetail get movie => (super.noSuchMethod(Invocation.getter(#movie),
      returnValue: _FakeTvDetail_5()) as _i7.TvDetail);
  @override
  _i9.RequestState get movieState =>
      (super.noSuchMethod(Invocation.getter(#movieState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  List<_i10.TvSeries> get movieRecommendations =>
      (super.noSuchMethod(Invocation.getter(#movieRecommendations),
          returnValue: <_i10.TvSeries>[]) as List<_i10.TvSeries>);
  @override
  _i9.RequestState get recommendationState =>
      (super.noSuchMethod(Invocation.getter(#recommendationState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(Invocation.getter(#isAddedToWatchlist),
          returnValue: false) as bool);
  @override
  String get watchlistMessage =>
      (super.noSuchMethod(Invocation.getter(#watchlistMessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i11.Future<void> fetchTvMovieDetail(int? id) => (super.noSuchMethod(
      Invocation.method(#fetchTvMovieDetail, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  _i11.Future<void> addWatchlist(_i7.TvDetail? tvMovie) => (super.noSuchMethod(
      Invocation.method(#addWatchlist, [tvMovie]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromWatchlist(_i7.TvDetail? tvMovie) =>
      (super.noSuchMethod(Invocation.method(#removeFromWatchlist, [tvMovie]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> loadWatchlistTvStatus(int? id) => (super.noSuchMethod(
      Invocation.method(#loadWatchlistTvStatus, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
